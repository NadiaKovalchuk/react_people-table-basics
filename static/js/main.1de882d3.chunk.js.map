{"version":3,"sources":["components/NavBar.tsx","App.tsx","components/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/FetchError.tsx","components/NoPeopleMessage.tsx","components/PersonData.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","components/HomeRedirect.tsx","components/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","NavBar","className","role","to","App","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","FetchError","noPeopleMessage","PersonData","child","person","people","slug","useParams","mother","find","mom","name","motherName","father","peopleFromServer","dad","fatherName","findFather","sex","born","died","PeopleTable","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","length","NoPeopleMessage","HomeRedirect","replace","NotFoundPage","Root","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1de882d3.chunk.js","sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => classNames('navbar-item', { 'has-background-grey-lighter': isActive });\n\nconst NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink className={getLinkClass} to=\"/\">\n            Home\n          </NavLink>\n\n          <NavLink className={getLinkClass} to=\"/people\">\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\nimport NavBar from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n\nexport default HomePage;\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","const FetchError = () => {\n  return (\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      Something went wrong\n    </p>\n  );\n};\n\nexport default FetchError;\n","const noPeopleMessage = () => {\n  return <p data-cy=\"noPeopleMessage\">There are no people on the server</p>;\n};\n\nexport default noPeopleMessage;\n","/* eslint-disable no-console */\nimport classNames from 'classnames';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface PersonDataProps {\n  person: Person;\n  people: Person[];\n}\n\nconst PersonData: React.FC<PersonDataProps> = ({ person, people }) => {\n  const { slug } = useParams();\n\n  const findMother = (peopleFromServer: Person[], child: Person) => {\n    return peopleFromServer.find((mom) => mom.name === child.motherName);\n  };\n\n  const mother = findMother(people, person);\n\n  const findFather = (peopleFromServer: Person[], child: Person) => {\n    return peopleFromServer.find((dad) => dad.name === child.fatherName);\n  };\n\n  const father = findFather(people, person);\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({ 'has-background-warning': person.slug === slug })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}`}\n          className={classNames({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td className={classNames({ 'has-text-danger': mother })}>\n        {mother ? (\n          <NavLink to={`/people/${mother.slug}`} className=\"has-text-danger\">\n            {mother.name}\n          </NavLink>\n        ) : (\n          person.motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <NavLink to={`/people/${father.slug}`}>{father.name}</NavLink>\n        ) : (\n          person.fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonData;\n","import { Person } from '../types';\nimport PersonData from './PersonData';\n\ninterface PeopleTableProps {\n  people: Person[];\n}\n\nconst PeopleTable: React.FC<PeopleTableProps> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map((person) => (\n          <PersonData key={person.slug} person={person} people={people} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default PeopleTable;\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport FetchError from './FetchError';\nimport NoPeopleMessage from './NoPeopleMessage';\nimport PeopleTable from './PeopleTable';\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((peopleFromServer) => {\n        setPeople(peopleFromServer);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading ? <Loader /> : <PeopleTable people={people} />}\n          {isError && <FetchError />}\n          {!isLoading && people.length === 0 && <NoPeopleMessage />}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default PeoplePage;\n","import { Navigate } from 'react-router-dom';\n\nconst HomeRedirect = () => {\n  return <Navigate to=\"/\" replace />;\n};\n\nexport default HomeRedirect;\n","const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n\nexport default NotFoundPage;\n","import { Route, HashRouter as Router, Routes } from 'react-router-dom';\nimport { App } from './App';\nimport HomePage from './components/HomePage';\nimport PeoplePage from './components/PeoplePage';\nimport HomeRedirect from './components/HomeRedirect';\nimport NotFoundPage from './components/NotFoundPage';\n\nexport const Root = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<HomeRedirect />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement).render(<Root />);\n"],"sourceRoot":""}